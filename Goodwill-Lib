--[[
Goodwill-Lib Version 2

Added An option for Custom Themes

New Window Creation Format: (*Optional)
Module:CreateWindow(DisplayName<String>, CloseKey<Enum.KeyCode>, OpenKey<Enum.KeyCode>, ThemeSetting<Table: {
	*WindowScale<Vector2> (Window Scale Multiplier) = Vector2.new(SizeXMultiplier*100, SizeYMultiplier*100). Default: Vector2.new(100, 100),
	*ScrollSpeed<Number> (How fast it takes to swithc between windows) = ScrollSpeed. Default: 1,
	*MainColor<Color3> (Background Color) = Color3.fromRGB(R, G, B). Default: Color3.fromRGB(20, 20, 20),
	*SelectionColor<Color3> (Color of the SideBar Selection Frame) = Color3.fromRGB(R, G, B). Default: Color3.fromRGB(0, 0, 255),
	*Rounding<UDim> (Rounding of the Main Frame) = UDim.new(Scale, Offset). Default: UDim.new(0, 0),
	*PrimaryColor<Color3> (Color of the page Modules (Aka Buttons)) = Color3.fromRGB(R, G, B). Default: Color3.fromRGB(0, 0, 0),
	*SecondaryColor<Color3> (Secondary 1 Color of the page Modules) = Color3.fromRGB(R, G, B). Default: Color3.fromRGB(80, 0, 80),
	*Secondary2Color<Color3> (Secondary 2 Color of the page Modules) = Color3.fromRGB(R, G, B). Default: Color3.fromRGB(150, 0, 150),
	*TextColor<Color3> (Color of all the text) = Color3.fromRGB(R, G, B). Default: Color3.fromRGB(255, 255, 255),
}>)

Theme Settings might be pretty complicated, but are COMPLETELY optional
]]

local Window = Instance.new("Frame")
local TopBar = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local SideBar = Instance.new("Frame")
local Select = Instance.new("Frame")
local Pages = Instance.new("Frame")
local Label = Instance.new("Frame")
local Title_2 = Instance.new("TextLabel")
local Toggle = Instance.new("Frame")
local Title_3 = Instance.new("TextLabel")
local Toggle_2 = Instance.new("Frame")
local Line = Instance.new("Frame")
local Point = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")
local Slider = Instance.new("Frame")
local Title_4 = Instance.new("TextLabel")
local Slider_2 = Instance.new("Frame")
local Line_2 = Instance.new("Frame")
local Point_2 = Instance.new("TextButton")
local UICorner_2 = Instance.new("UICorner")
local Button = Instance.new("Frame")
local Title_5 = Instance.new("TextLabel")
local TextButton = Instance.new("TextButton")
local TextBox = Instance.new("Frame")
local Title_6 = Instance.new("TextLabel")
local TextBox_2 = Instance.new("TextBox")
local Page = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIGridLayout")

local Folder = Instance.new("Folder")
Folder.Parent = game.ReplicatedStorage
Folder.Name = "Goodwill-Lib"

Window.Name = "Window"
Window.Parent = Folder
Window.AnchorPoint = Vector2.new(0.5, 0.5)
Window.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Window.BorderSizePixel = 0
Window.Position = UDim2.new(0.5, 0, 0.5, 0)
Window.Size = UDim2.new(0.400000006, 0, 0.600000024, 0)

TopBar.Name = "TopBar"
TopBar.Parent = Window
TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar.BackgroundTransparency = 1.000
TopBar.Size = UDim2.new(1, 0, 0, 35)

Title.Name = "Title"
Title.Parent = TopBar
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1.000
Title.Size = UDim2.new(0.5, 0, 1, 0)
Title.Font = Enum.Font.SourceSansBold
Title.Text = ""
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextScaled = true
Title.TextSize = 14.000
Title.TextWrapped = true

SideBar.Name = "SideBar"
SideBar.Parent = Window
SideBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SideBar.BackgroundTransparency = 1.000
SideBar.Position = UDim2.new(0, 0, 0, 35)
SideBar.Size = UDim2.new(0, 100, 1, -35)

Select.Name = "Select"
Select.Parent = SideBar
Select.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
Select.BackgroundTransparency = 0.900
Select.BorderSizePixel = 0
Select.Size = UDim2.new(1, 0, 1, 0)

Pages.Name = "Pages"
Pages.Parent = Window
Pages.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Pages.BackgroundTransparency = 1.000
Pages.ClipsDescendants = true
Pages.Position = UDim2.new(0, 100, 0, 35)
Pages.Size = UDim2.new(1, -100, 1, -35)

Label.Name = "Label"
Label.Parent = Folder
Label.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Label.BorderSizePixel = 0
Label.Size = UDim2.new(0, 100, 0, 100)

Title_2.Name = "Title"
Title_2.Parent = Label
Title_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_2.BackgroundTransparency = 1.000
Title_2.Size = UDim2.new(1, 0, 1, 0)
Title_2.Font = Enum.Font.SourceSansBold
Title_2.Text = "Name Here"
Title_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_2.TextScaled = true
Title_2.TextSize = 14.000
Title_2.TextWrapped = true

Toggle.Name = "Toggle"
Toggle.Parent = Folder
Toggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Size = UDim2.new(0, 100, 0, 100)

Title_3.Name = "Title"
Title_3.Parent = Toggle
Title_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_3.BackgroundTransparency = 1.000
Title_3.Size = UDim2.new(0.5, 0, 1, 0)
Title_3.Font = Enum.Font.SourceSansBold
Title_3.Text = "Name Here"
Title_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_3.TextScaled = true
Title_3.TextSize = 14.000
Title_3.TextWrapped = true

Toggle_2.Name = "Toggle"
Toggle_2.Parent = Toggle
Toggle_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Toggle_2.BackgroundTransparency = 1.000
Toggle_2.Position = UDim2.new(0.5, 0, 0, 0)
Toggle_2.Size = UDim2.new(0.5, 0, 1, 0)

Line.Name = "Line"
Line.Parent = Toggle_2
Line.AnchorPoint = Vector2.new(0.5, 0.5)
Line.BackgroundColor3 = Color3.fromRGB(80, 0, 80)
Line.BorderSizePixel = 0
Line.Position = UDim2.new(0.5, 0, 0.5, 0)
Line.Size = UDim2.new(0.800000012, 0, 0.300000012, 0)

Point.Name = "Point"
Point.Parent = Line
Point.Active = false
Point.AnchorPoint = Vector2.new(0.5, 0.5)
Point.BackgroundColor3 = Color3.fromRGB(150, 0, 150)
Point.Position = UDim2.new(0, 0, 0.5, 0)
Point.Selectable = false
Point.Size = UDim2.new(0, 30, 0, 30)
Point.Text = ""

UICorner.CornerRadius = UDim.new(1, 0)
UICorner.Parent = Point

Slider.Name = "Slider"
Slider.Parent = Folder
Slider.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Slider.BorderSizePixel = 0
Slider.Size = UDim2.new(0, 100, 0, 100)

Title_4.Name = "Title"
Title_4.Parent = Slider
Title_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_4.BackgroundTransparency = 1.000
Title_4.Size = UDim2.new(0.5, 0, 1, 0)
Title_4.Font = Enum.Font.SourceSansBold
Title_4.Text = "Name Here"
Title_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_4.TextScaled = true
Title_4.TextSize = 14.000
Title_4.TextWrapped = true

Slider_2.Name = "Slider"
Slider_2.Parent = Slider
Slider_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slider_2.BackgroundTransparency = 1.000
Slider_2.Position = UDim2.new(0.5, 0, 0, 0)
Slider_2.Size = UDim2.new(0.5, 0, 1, 0)

Line_2.Name = "Line"
Line_2.Parent = Slider_2
Line_2.AnchorPoint = Vector2.new(0.5, 0.5)
Line_2.BackgroundColor3 = Color3.fromRGB(80, 0, 80)
Line_2.BorderSizePixel = 0
Line_2.Position = UDim2.new(0.5, 0, 0.5, 0)
Line_2.Size = UDim2.new(0.800000012, 0, 0.300000012, 0)

Point_2.Name = "Point"
Point_2.Parent = Line_2
Point_2.Active = false
Point_2.AnchorPoint = Vector2.new(0.5, 0.5)
Point_2.BackgroundColor3 = Color3.fromRGB(150, 0, 150)
Point_2.Position = UDim2.new(0, 0, 0.5, 0)
Point_2.Selectable = false
Point_2.Size = UDim2.new(0, 30, 0, 30)
Point_2.Font = Enum.Font.SourceSansBold
Point_2.Text = "0"
Point_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Point_2.TextScaled = true
Point_2.TextWrapped = true

UICorner_2.CornerRadius = UDim.new(1, 0)
UICorner_2.Parent = Point_2

Button.Name = "Button"
Button.Parent = Folder
Button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Size = UDim2.new(0, 100, 0, 100)

Title_5.Name = "Title"
Title_5.Parent = Button
Title_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_5.BackgroundTransparency = 1.000
Title_5.Size = UDim2.new(0.5, 0, 1, 0)
Title_5.Font = Enum.Font.SourceSansBold
Title_5.Text = "Name Here"
Title_5.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_5.TextScaled = true
Title_5.TextSize = 14.000
Title_5.TextWrapped = true

TextButton.Parent = Button
TextButton.AnchorPoint = Vector2.new(0.5, 0.5)
TextButton.BackgroundColor3 = Color3.fromRGB(100, 0, 100)
TextButton.BackgroundTransparency = 0.500
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.75, 0, 0.5, 0)
TextButton.Size = UDim2.new(0.449999988, 0, 0.899999976, 0)
TextButton.Font = Enum.Font.SourceSansBold
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextScaled = true
TextButton.TextSize = 14.000
TextButton.TextWrapped = true

TextBox.Name = "TextBox"
TextBox.Parent = Folder
TextBox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextBox.BorderSizePixel = 0
TextBox.Size = UDim2.new(0, 100, 0, 100)

Title_6.Name = "Title"
Title_6.Parent = TextBox
Title_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_6.BackgroundTransparency = 1.000
Title_6.Size = UDim2.new(0.5, 0, 1, 0)
Title_6.Font = Enum.Font.SourceSansBold
Title_6.Text = "Name Here"
Title_6.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_6.TextScaled = true
Title_6.TextSize = 14.000
Title_6.TextWrapped = true

TextBox_2.Parent = TextBox
TextBox_2.AnchorPoint = Vector2.new(0.5, 0.5)
TextBox_2.BackgroundColor3 = Color3.fromRGB(100, 0, 100)
TextBox_2.BackgroundTransparency = 0.500
TextBox_2.BorderColor3 = Color3.fromRGB(100, 0, 100)
TextBox_2.BorderSizePixel = 0
TextBox_2.Position = UDim2.new(0.75, 0, 0.5, 0)
TextBox_2.Size = UDim2.new(0.449999988, 0, 0.899999976, 0)
TextBox_2.Font = Enum.Font.SourceSansBold
TextBox_2.PlaceholderText = "Text"
TextBox_2.Text = ""
TextBox_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox_2.TextScaled = true
TextBox_2.TextSize = 14.000
TextBox_2.TextWrapped = true

Page.Name = "Page"
Page.Parent = Folder
Page.AnchorPoint = Vector2.new(0.5, 0.5)
Page.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Page.BackgroundTransparency = 1.000
Page.BorderSizePixel = 0
Page.Position = UDim2.new(0.5, 0, 0.5, 0)
Page.Selectable = false
Page.Size = UDim2.new(0.899999976, 0, 1, 0)
Page.BottomImage = ""
Page.CanvasSize = UDim2.new(0, 0, 0, 0)
Page.ScrollBarThickness = 4
Page.TopImage = ""

UIGridLayout.Parent = Page
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout.CellSize = UDim2.new(1, 0, 0, 40)

local module = {}

local Buttons = 0

local EventFolder = nil

local Mouse = game.Players.LocalPlayer:GetMouse()

local function map(value, istart, istop, ostart, ostop)
	return ostart + (ostop - ostart) * ((value - istart) / (istop - istart))
end

local function lerp(x, y, z)
	return x + (y - x) * z
end

local function EnableDrag(GuiObject2, GuiObject)
	local plr = game.Players.LocalPlayer
	local m = plr:GetMouse()
	if GuiObject:IsA("GuiBase") then
		local Last = Vector2.new(0, 0)
		local Held = false
		m.Button1Down:Connect(function()
			if (m.X > GuiObject.AbsolutePosition.X and m.X < GuiObject.AbsolutePosition.X + GuiObject.AbsoluteSize.X) and (m.Y > GuiObject.AbsolutePosition.Y and m.Y < GuiObject.AbsolutePosition.Y + GuiObject.AbsoluteSize.Y) then
				Held = true
				Last = Vector2.new(m.X, m.Y)
			end
		end)

		m.Move:Connect(function()
			if Held then
				GuiObject2.Position += UDim2.new(0, m.X - Last.X, 0, m.Y - Last.Y)
				Last = Vector2.new(m.X, m.Y)
			end
		end)

		m.Button1Up:Connect(function()
			Held = false
		end)
	end
end

local function AddEvent(Name)
	if not EventFolder then
		EventFolder = Instance.new("Folder", game)
		EventFolder.Name = "CustomEvents"
	end
	local Event = Instance.new("BindableEvent", EventFolder)
	Event.Name = Name
	return Event
end

local function sign(i)
	if i > 0 then
		return 1
	end
	if i < 0 then
		return -1
	end
	return i
end

function module:CreateWindow(Name, CloseBind, OpenBind, ExtraSettings)
	local a = {}

	local GlobalEvent = AddEvent("Global")
	a.GlobalEvent = GlobalEvent.Event

	local HighlightPos = 0

	local b = Folder.Window:Clone()
	b.TopBar.Title.Text = Name

	local ScrollSpeed = 1

	local Enabled = true

	local ModuleColor = Color3.fromRGB(0, 0, 0)
	local SecondColor = Color3.fromRGB(80, 0, 80)
	local Second2Color = Color3.fromRGB(150, 0, 150)

	local TextColor = Color3.new(1, 1, 1)

	if ExtraSettings then
		if ExtraSettings.WindowScale then
			b.Size = UDim2.new(b.Size.X.Scale * ExtraSettings.WindowScale.X/100, 0, b.Size.Y.Scale * ExtraSettings.WindowScale.Y/100, 0)
		end
		if ExtraSettings.ScrollSpeed then
			ScrollSpeed = ExtraSettings.ScrollSpeed
		end

		if ExtraSettings.MainColor then
			b.BackgroundColor3 = ExtraSettings.MainColor
		end

		if ExtraSettings.SelectionColor then
			b.SideBar.Select.BackgroundColor3 = ExtraSettings.SelectionColor
		end

		if ExtraSettings.Rounding then
			local Round = Instance.new("UICorner", b)
			Round.CornerRadius = ExtraSettings.Rounding
			Round.Name = "CornerRounding"
		end

		if ExtraSettings.PrimaryColor then
			ModuleColor = ExtraSettings.PrimaryColor
		end

		if ExtraSettings.SecondaryColor then
			SecondColor = ExtraSettings.SecondaryColor
		end

		if ExtraSettings.Secondary2Color then
			Second2Color = ExtraSettings.Secondary2Color
		end

		if ExtraSettings.TextColor then
			TextColor = ExtraSettings.TextColor
		end
	end

	function a:ChangeTheme(ExtraSettings)
		if ExtraSettings then
			if ExtraSettings.WindowScale then
				b.Size = UDim2.new(b.Size.X.Scale * ExtraSettings.WindowScale.X/100, 0, b.Size.Y.Scale * ExtraSettings.WindowScale.Y/100, 0)
			end
			if ExtraSettings.ScrollSpeed then
				ScrollSpeed = ExtraSettings.ScrollSpeed
			end

			if ExtraSettings.MainColor then
				b.BackgroundColor3 = ExtraSettings.MainColor
			end

			if ExtraSettings.SelectionColor then
				b.SideBar.Select.BackgroundColor3 = ExtraSettings.SelectionColor
			end

			if ExtraSettings.Rounding then
				if b:FindFirstChild("CornerRounding") then
					b:FindFirstChild("CornerRounding").CornerRadius = ExtraSettings.Rounding
				else
					local Round = Instance.new("UICorner", b)
					Round.CornerRadius = ExtraSettings.Rounding
					Round.Name = "CornerRounding"
				end
			end

			if ExtraSettings.PrimaryColor then
				ModuleColor = ExtraSettings.PrimaryColor
				for i_, v_ in pairs(b.Pages:GetChildren()) do
					for i, v in pairs(v_:GetChildren()) do
						if v:IsA("GuiBase") then
							v.BackgroundColor3 = ModuleColor
						end
					end
				end
			end

			if ExtraSettings.SecondaryColor then
				SecondColor = ExtraSettings.SecondaryColor
				for i_, v_ in pairs(b.Pages:GetChildren()) do
					for i, v in pairs(v_:GetChildren()) do
						if v:IsA("GuiBase") then
							if v:FindFirstChild("Toggle") then
								v.Toggle.Line.BackgroundColor3 = SecondColor
							end
							if v:FindFirstChild("Slider") then
								v.Slider.Line.BackgroundColor3 = SecondColor
							end
							if v:FindFirstChild("TextButton") then
								v.TextButton.BackgroundColor3 = SecondColor
							end
							if v:FindFirstChild("TextBox") then
								v.TextBox.BackgroundColor3 = SecondColor
							end
						end
					end
				end
			end

			if ExtraSettings.Secondary2Color then
				Second2Color = ExtraSettings.Secondary2Color
				for i_, v_ in pairs(b.Pages:GetChildren()) do
					for i, v in pairs(v_:GetChildren()) do
						if v:IsA("GuiBase") then
							if v:FindFirstChild("Toggle") then
								v.Toggle.Line.Point.BackgroundColor3 = Second2Color
							end
							if v:FindFirstChild("Slider") then
								v.Slider.Line.Point.BackgroundColor3 = Second2Color
							end
						end
					end
				end
			end

			if ExtraSettings.TextColor then
				TextColor = ExtraSettings.TextColor
				for i_, v_ in pairs(b.Pages:GetChildren()) do
					for i, v in pairs(v_:GetChildren()) do
						if v:IsA("GuiBase") then
							if v:FindFirstChild("Slider") then
								v.Slider.Line.Point.TextColor3 = TextColor
							end
							if v:FindFirstChild("TextButton") then
								v.TextButton.TextColor3 = TextColor
							end
							if v:FindFirstChild("TextBox") then
								v.TextBox.TextColor3 = TextColor
							end
							v.Title.TextColor3 = TextColor
						end
					end
				end
				b.TopBar.Title.TextColor3 = TextColor
				for i, v in pairs(b.SideBar:GetChildren()) do
					if v:IsA("TextButton") and v.Name ~= "Select" then
						v.TextColor3 = TextColor
					end
				end
			end
		end
	end

	b.TopBar.Title.TextColor3 = TextColor

	a.Frame = b

	EnableDrag(b, b.TopBar)

	local Scrolling = false

	local UnlockMouse = true

	game:GetService("RunService").RenderStepped:Connect(function(dt)
		if Enabled then
			b.SideBar.Select.Position = b.SideBar.Select.Position:Lerp(UDim2.new(0, 0, HighlightPos, 0), 0.2)

			if UnlockMouse then
				game:GetService("UserInputService").MouseBehavior = Enum.MouseBehavior.Default
			end
		end
	end)

	game:GetService("UserInputService").InputBegan:Connect(function(i, gpe)
		if Enabled then
			if not b.Visible then
				if i.KeyCode == OpenBind then
					b.Visible = true
					UnlockMouse = true
				end
			else
				if i.KeyCode == CloseBind then
					b.Visible = false
					UnlockMouse = false
				end
			end
		end
	end)

	local CurPage = nil

	function a:Disable(f)
		Enabled = f
		if not Enabled then
			b.Visible = false
		else
			b.Visible = true
		end
	end

	function a:CreatePage(Name)
		local c = {}

		local Button = Instance.new("TextButton", b.SideBar)
		Button.Name = Name
		Button.BackgroundTransparency = 1
		Button.Font = Enum.Font.SourceSansBold
		Button.Text = Name
		Button.TextColor3 = TextColor
		Button.TextScaled = true
		Buttons += 1

		for i, v in pairs(b.SideBar:GetChildren()) do
			if v:IsA("TextButton") then
				v.Size = UDim2.new(1, 0, 1/Buttons, 0)
				v.Position = UDim2.new(0, 0, (i-2) * (1/Buttons), 0)
			end
		end
		b.SideBar.Select.Size = UDim2.new(1, 0, 1/Buttons, 0)

		local Page = Folder.Page:Clone()
		Page.Parent = b.Pages
		Page.Name = Name
		Page.Visible = false
		if Buttons == 1 then
			Page.Visible = true
			CurPage = Page
		end

		Button.MouseButton1Click:Connect(function()
			if not Scrolling and CurPage ~= Page then
				Scrolling = true
				HighlightPos = Button.Position.Y.Scale
				GlobalEvent:Fire("Page Changed", {Page.Name})
				Page.Visible = true
				Page.AnchorPoint = Vector2.new(0, 1)
				Page.Position = UDim2.new(0, 0, 0, 0)
				CurPage.AnchorPoint = Vector2.new(0, 1)
				CurPage.Position = UDim2.new(0, 0, 1, 0)
				local I = 0
				repeat
					local inc = wait() * (ScrollSpeed*2)
					I += inc
					I = math.min(I, 1)
					Page.AnchorPoint = Page.AnchorPoint:Lerp(Vector2.new(0, 0), I)
					CurPage.AnchorPoint = CurPage.AnchorPoint:Lerp(Vector2.new(0, 0), I)
				until I >= 1
				CurPage.Visible = false
				CurPage = Page
				Scrolling = false
			end

		end)

		function c:CreateToggle(Name, Title, Value)
			local d = {}

			d["Value"] = Value

			local Toggle = Folder.Toggle:Clone()
			Toggle.Parent = Page
			Toggle.Name = Name
			Toggle.Title.Text = Title
			Toggle.Title.TextColor3 = TextColor

			Toggle.BackgroundColor3 = ModuleColor
			Toggle.Toggle.Line.BackgroundColor3 = SecondColor
			Toggle.Toggle.Line.Point.BackgroundColor3 = Second2Color

			d.Element = Toggle

			local Point = Toggle.Toggle.Line.Point

			local EventToggle = AddEvent("Toggled ".. Name)
			d.Toggled = EventToggle.Event

			local function ToggleButton(...)
				local e = {...}
				spawn(function()
					if #e == 1 then
						Value = e[1]
						d["Value"] = Value
					else
						Value = not Value
						d["Value"] = Value
					end
					local i = 0
					repeat
						local inc = wait()/0.75
						i += inc
						i = math.min(1, i)
						if Value == true then
							Point.Position = Point.Position:Lerp(UDim2.new(1, 0, 0.5, 0), i)
						else
							Point.Position = Point.Position:Lerp(UDim2.new(0, 0, 0.5, 0), i)
						end
					until i >= 1
				end)
			end

			d["Change"] = ToggleButton

			if Value == true then
				ToggleButton(true)
			end

			Point.MouseButton1Click:Connect(function()
				ToggleButton()
				EventToggle:Fire(not Value)
			end)

			Page.CanvasSize += UDim2.new(0, 0, 0, Page.UIGridLayout.CellPadding.Y.Offset + Page.UIGridLayout.CellSize.Y.Offset)

			return d
		end

		function c:CreateLabel(Name, Title)
			local d = {}

			d["Value"] = Title

			local Label = Folder.Label:Clone()
			Label.Parent = Page
			Label.Name = Name
			Label.Title.Text = Title
			Label.Title.TextColor3 = TextColor
			Label.BackgroundColor3 = ModuleColor

			d["Change"] = function(Value)
				Label.Title.Text = Value
			end

			d.Element = Label

			Page.CanvasSize += UDim2.new(0, 0, 0, Page.UIGridLayout.CellPadding.Y.Offset + Page.UIGridLayout.CellSize.Y.Offset)

			return d
		end

		function c:CreateSlider(Name, Title, Min, Max, Value)
			local d = {}

			d["Value"] = Value

			local Slider = Folder.Slider:Clone()
			Slider.Parent = Page
			Slider.Name = Name
			Slider.Title.Text = Title
			Slider.Title.TextColor3 = TextColor

			Slider.BackgroundColor3 = ModuleColor
			Slider.Slider.Line.BackgroundColor3 = SecondColor
			Slider.Slider.Line.Point.BackgroundColor3 = Second2Color
			Slider.Slider.Line.Point.TextColor3 = TextColor

			d.Element = Slider

			local Point = Slider.Slider.Line.Point
			Point.Text = Value

			local EventMoved = AddEvent("Moved ".. Name)
			d.Moved = EventMoved.Event

			Point.Position = UDim2.new(Value/Max, 0, 0.5, 0)

			local MouseDown = false

			Point.MouseButton1Down:Connect(function()
				MouseDown = true
			end)
			Point.MouseButton1Up:Connect(function()
				MouseDown = false
			end)
			Mouse.Button1Up:Connect(function()
				MouseDown = false
			end)

			d["Change"] = function(Value, ...)
				local E = {...}
				if #E >= 1 then
					Min = E[1]
				end
				if #E == 2 then
					Max = E[2]
				end

				Value = Value
				Point.Position = UDim2.new(Value / (Max-Min), 0, 0.5, 0)
			end

			Mouse.Move:Connect(function()
				if MouseDown then
					Point.Position = UDim2.new(math.clamp((Mouse.X - Slider.Slider.Line.AbsolutePosition.X)/Slider.Slider.Line.AbsoluteSize.X, 0, 1), 0, 0.5, 0)
					Value = math.round(map(math.round(Point.Position.X.Scale * Max), 0, Max, Min, Max))
					Point.Position = UDim2.new(Value / (Max-Min), 0, 0.5, 0)

					Point.Text = Value

					d["Value"] = Value

					EventMoved:Fire(Value, Min, Max)
					GlobalEvent:Fire("Slider Moved", {Slider.Name, Value, Min, Max})
				end
			end)

			Page.CanvasSize += UDim2.new(0, 0, 0, Page.UIGridLayout.CellPadding.Y.Offset + Page.UIGridLayout.CellSize.Y.Offset)

			return d
		end

		function c:CreateTextBox(Name, Title, StartValue)
			local d = {}

			d["Value"] = StartValue

			local TextEvent = AddEvent("Changed ".. Name)
			d.Changed = TextEvent.Event

			local TextBox = Folder.TextBox:Clone()
			TextBox.Parent = Page
			TextBox.Name = Name
			TextBox.Title.Text = Title
			TextBox.TextBox.PlaceholderText = Name
			TextBox.TextBox.Text = StartValue
			TextBox.Title.TextColor3 = TextColor
			TextBox.TextBox.TextColor3 = TextColor

			TextBox.BackgroundColor3 = ModuleColor
			TextBox.TextBox.BackgroundColor3 = SecondColor

			d["Change"] = function(Value)
				TextBox.TextBox.Text = Value
			end

			TextBox.TextBox.FocusLost:Connect(function()
				TextEvent:Fire(TextBox.TextBox.Text)

				d["Value"] = TextBox.TextBox.Text
			end)

			d.Element = TextBox

			Page.CanvasSize += UDim2.new(0, 0, 0, Page.UIGridLayout.CellPadding.Y.Offset + Page.UIGridLayout.CellSize.Y.Offset)

			return d
		end

		function c:CreateButton(Name, Title, ButtonText)
			local d = {}

			d["Value"] = ButtonText

			local ClickEvent = AddEvent("Changed ".. Name)
			d.Clicked = ClickEvent.Event

			local Button = Folder.Button:Clone()
			Button.Parent = Page
			Button.Name = Name
			Button.Title.Text = Title
			Button.TextButton.Text = ButtonText
			Button.Title.TextColor3 = TextColor
			Button.TextButton.TextColor3 = TextColor

			Button.BackgroundColor3 = ModuleColor
			Button.TextButton.BackgroundColor3 = SecondColor

			d["Change"] = function(Value)
				Button.TextButton.Text = Value
			end

			Button.TextButton.MouseButton1Click:Connect(function()
				ClickEvent:Fire()
			end)

			d.Element = Button

			Page.CanvasSize += UDim2.new(0, 0, 0, Page.UIGridLayout.CellPadding.Y.Offset + Page.UIGridLayout.CellSize.Y.Offset)

			return d
		end

		return c
	end

	return a
end

return module
